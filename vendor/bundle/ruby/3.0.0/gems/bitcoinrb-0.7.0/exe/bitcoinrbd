#!/usr/bin/env ruby
require 'thor'
require 'bitcoin'
require 'daemon_spawn'

class BitcoinDaemon < DaemonSpawn::Base

  def start(args)
    puts "Bitcoinrb daemon start : #{Time.now}"
    conf = Bitcoin::Node::Configuration.new(network: args.first[:network])
    node = Bitcoin::Node::SPV.new(conf)
    node.run
  end

  def stop
    puts "Stopping Bitcoinrb daemon : #{Time.now}"
    node.shutdown
  end

end

class Bitcoinrbd < Thor

  class_option :network, aliases: '-n', default: :mainnet

  desc 'start', 'start bitcoinrb daemon.'
  def start
    network = options['network'] ? options['network'].to_sym : :mainnet
    Bitcoin.chain_params = network
    FileUtils.mkdir_p(Bitcoin.base_dir)
    execute_daemon(['start', network: network])
  end

  private

  def execute_daemon(cmd_args)
    BitcoinDaemon.spawn!({working_dir: Bitcoin.base_dir,
                                     log_file: "#{Bitcoin.base_dir}/log/bitcoinrbd.log",
                                     pid_file: "#{Bitcoin.base_dir}/bitcoinrbd.pid",
                                     sync_log: true,
                                     singleton: true}, cmd_args)
  end

end

Bitcoinrbd.start(ARGV)